import { Link, NavLink, useLocation } from "react-router-dom";
import s from "./HeaderNavigation.module.css";
import { useMediaQuery } from "react-responsive";

export const HeaderNavigation = ({
  className,
  openMenu,
  closeMenu,
  isOpen,
  isScrolled,
  scrollTop,
}) => {
  const isDesktop = useMediaQuery({ query: "(min-width: 1024px)" });
  const isMobile = useMediaQuery({ query: "(max-width: 1023px)" });

  const location = useLocation();

  const handleOpen = () => {
    openMenu();
  };

  // Задаємо колір для активних елементів
  const headerStyle =
    location.pathname === "/portfolio" ||
    location.pathname === "/policy-page" ||
    location.pathname.startsWith("/cases")
      ? { color: "black", fill: "black", backgroundColor: "transparent" }
      : { color: "white", fill: "white", backgroundColor: "transparent" };

  return (
    <nav style={headerStyle} className={`${s.navContainer} ${className}`}>
      {isDesktop && (
        <ul className={s.navList}>
          <li onClick={scrollTop}>
            <NavLink to="/">Home</NavLink>
          </li>

          <li className={`${s.backdrop} backdrop`}>
            <NavLink className={s.serviceLink} to="/services">
              Services
              <svg
                width="9"
                height="10"
                viewBox="0 0 9 10"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="M1.72292 6.15902L4.17999 3.29168C4.2196 3.24549 4.26872 3.20841 4.32401 3.18299C4.37929 3.15756 4.43942 3.1444 4.50026 3.1444C4.56111 3.1444 4.62124 3.15756 4.67652 3.18299C4.7318 3.20841 4.78093 3.24549 4.82054 3.29168L7.27761 6.15902C7.5121 6.43271 7.31769 6.85547 6.95733 6.85547H2.04249C1.68214 6.85547 1.48773 6.43271 1.72292 6.15902Z" />
              </svg>
            </NavLink>
            <div className={s.backdropContent}>
              <Link
                to="/services#project"
                className={location.hash === "#project" ? s.activeLink : ""}
              >
                Project Kick-Off
              </Link>
              <Link
                to="/services#discovery"
                className={location.hash === "#discovery" ? s.activeLink : ""}
              >
                Discovery
              </Link>
              <Link
                to="/services#UXUI"
                className={location.hash === "#UXUI" ? s.activeLink : ""}
              >
                UX/UI
              </Link>
              <Link
                to="/services#web"
                className={location.hash === "#web" ? s.activeLink : ""}
              >
                Web & Mobile <br /> Development
              </Link>
              <Link
                to="/services#due"
                className={location.hash === "#due" ? s.activeLink : ""}
              >
                Due Diligence
              </Link>
              <Link
                to="/services#staff"
                className={location.hash === "#staff" ? s.activeLink : ""}
              >
                Staff Augmentation
              </Link>
            </div>
          </li>

          <li>
            <NavLink to="/portfolio">Portfolio</NavLink>
          </li>
          <li>
            <NavLink to="/workflow">Workflow</NavLink>
          </li>
          <li>
            <NavLink to="/about">About</NavLink>
          </li>
        </ul>
      )}

      <Link to="/contact" onClick={closeMenu} className={s.headerContactBtn}>
        <svg
          className="contact-svg"
          viewBox="0 0 52 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop
              offset="0%"
              style={{ stopColor: "#6843E7", stopOpacity: 1 }}
            />
            <stop
              offset="50%"
              style={{ stopColor: "#F8086E", stopOpacity: 1 }}
            />
            <stop
              offset="100%"
              style={{ stopColor: "#6843E7", stopOpacity: 1 }}
            />
          </linearGradient>
          <path
            fill={
              location.pathname === "/portfolio" ||
              location.pathname === "/policy-page" ||
              location.pathname.startsWith("/cases")
                ? "black"
                : "white"
            }
            d="M9.71946 3.75355H7.86009C7.80706 3.44863 7.70928 3.1785 7.56676 2.94318C7.42424 2.70455 7.24692 2.50237 7.0348 2.33665C6.82268 2.17093 6.58073 2.04664 6.30895 1.96378C6.04048 1.8776 5.75047 1.83452 5.43892 1.83452C4.88542 1.83452 4.39489 1.97372 3.96733 2.25213C3.53977 2.52722 3.20502 2.93158 2.96307 3.4652C2.72112 3.9955 2.60014 4.64347 2.60014 5.40909C2.60014 6.18797 2.72112 6.84422 2.96307 7.37784C3.20833 7.90814 3.54309 8.30919 3.96733 8.58097C4.39489 8.84943 4.88376 8.98366 5.43395 8.98366C5.73887 8.98366 6.02391 8.94389 6.28906 8.86435C6.55753 8.78149 6.79782 8.66051 7.00994 8.50142C7.22538 8.34233 7.40601 8.14678 7.55185 7.91477C7.70099 7.68277 7.80374 7.41761 7.86009 7.11932L9.71946 7.12926C9.64986 7.61316 9.49905 8.06723 9.26705 8.49148C9.03835 8.91572 8.7384 9.29025 8.36719 9.61506C7.99598 9.93655 7.56179 10.1884 7.06463 10.3707C6.56747 10.5497 6.01563 10.6392 5.40909 10.6392C4.5142 10.6392 3.71544 10.4321 3.01278 10.0178C2.31013 9.60346 1.75663 9.00521 1.35227 8.22301C0.947917 7.44081 0.745739 6.50284 0.745739 5.40909C0.745739 4.31203 0.949574 3.37405 1.35724 2.59517C1.76491 1.81297 2.32008 1.21473 3.02273 0.800426C3.72538 0.386126 4.52083 0.178977 5.40909 0.178977C5.97585 0.178977 6.50284 0.258522 6.99006 0.417613C7.47727 0.576704 7.91146 0.810369 8.29261 1.11861C8.67377 1.42353 8.98698 1.79806 9.23224 2.24219C9.48082 2.683 9.64323 3.18679 9.71946 3.75355ZM14.352 10.6491C13.6062 10.6491 12.9599 10.4851 12.4131 10.157C11.8662 9.82884 11.4419 9.36979 11.1403 8.77983C10.842 8.18987 10.6929 7.50047 10.6929 6.71165C10.6929 5.92282 10.842 5.23177 11.1403 4.63849C11.4419 4.04522 11.8662 3.58452 12.4131 3.25639C12.9599 2.92827 13.6062 2.7642 14.352 2.7642C15.0977 2.7642 15.744 2.92827 16.2909 3.25639C16.8378 3.58452 17.2604 4.04522 17.5587 4.63849C17.8603 5.23177 18.0111 5.92282 18.0111 6.71165C18.0111 7.50047 17.8603 8.18987 17.5587 8.77983C17.2604 9.36979 16.8378 9.82884 16.2909 10.157C15.744 10.4851 15.0977 10.6491 14.352 10.6491ZM14.3619 9.20739C14.7663 9.20739 15.1043 9.09635 15.3761 8.87429C15.6479 8.64891 15.8501 8.3473 15.9827 7.96946C16.1186 7.59162 16.1865 7.17069 16.1865 6.70668C16.1865 6.23935 16.1186 5.81676 15.9827 5.43892C15.8501 5.05777 15.6479 4.7545 15.3761 4.52912C15.1043 4.30374 14.7663 4.19105 14.3619 4.19105C13.9476 4.19105 13.6029 4.30374 13.3278 4.52912C13.0561 4.7545 12.8522 5.05777 12.7163 5.43892C12.5837 5.81676 12.5175 6.23935 12.5175 6.70668C12.5175 7.17069 12.5837 7.59162 12.7163 7.96946C12.8522 8.3473 13.0561 8.64891 13.3278 8.87429C13.6029 9.09635 13.9476 9.20739 14.3619 9.20739ZM21.0303 6.02557V10.5H19.2306V2.86364H20.9508V4.16122H21.0403C21.2159 3.73366 21.496 3.39394 21.8804 3.14205C22.2682 2.89015 22.7472 2.7642 23.3172 2.7642C23.8442 2.7642 24.3033 2.87689 24.6944 3.10227C25.0888 3.32765 25.3937 3.65412 25.6091 4.08168C25.8279 4.50923 25.9356 5.02794 25.9323 5.63778V10.5H24.1326V5.91619C24.1326 5.40578 24 5.00639 23.7349 4.71804C23.473 4.42969 23.1101 4.28551 22.6461 4.28551C22.3312 4.28551 22.0511 4.35511 21.8059 4.49432C21.5639 4.63021 21.3733 4.82741 21.2341 5.08594C21.0983 5.34446 21.0303 5.65767 21.0303 6.02557ZM31.2671 2.86364V4.25568H26.8771V2.86364H31.2671ZM27.9609 1.03409H29.7607V8.20312C29.7607 8.44508 29.7971 8.63068 29.87 8.75994C29.9463 8.88589 30.0457 8.97206 30.1683 9.01847C30.291 9.06487 30.4269 9.08807 30.576 9.08807C30.6887 9.08807 30.7914 9.07978 30.8842 9.06321C30.9804 9.04664 31.0533 9.03172 31.103 9.01847L31.4063 10.4254C31.3101 10.4586 31.1726 10.495 30.9936 10.5348C30.818 10.5746 30.6025 10.5978 30.3473 10.6044C29.8965 10.6177 29.4905 10.5497 29.1293 10.4006C28.768 10.2481 28.4813 10.0128 28.2692 9.6946C28.0604 9.37642 27.9576 8.97869 27.9609 8.50142V1.03409ZM34.6616 10.6541C34.1777 10.6541 33.7419 10.5679 33.3541 10.3956C32.9696 10.2199 32.6647 9.96141 32.4393 9.62003C32.2173 9.27865 32.1062 8.85772 32.1062 8.35724C32.1062 7.92637 32.1858 7.57008 32.3449 7.28835C32.504 7.00663 32.7211 6.78125 32.9962 6.61222C33.2713 6.44318 33.5812 6.31558 33.9258 6.2294C34.2739 6.13991 34.6335 6.07528 35.0047 6.03551C35.4521 5.98911 35.8151 5.94768 36.0935 5.91122C36.3719 5.87145 36.574 5.81179 36.7 5.73224C36.8293 5.64938 36.8939 5.52178 36.8939 5.34943V5.3196C36.8939 4.94508 36.7829 4.65507 36.5608 4.44957C36.3387 4.24408 36.0189 4.14134 35.6013 4.14134C35.1605 4.14134 34.8108 4.23745 34.5523 4.42969C34.2971 4.62192 34.1247 4.84896 34.0352 5.1108L32.3548 4.87216C32.4874 4.40814 32.7062 4.02036 33.0111 3.70881C33.316 3.39394 33.6889 3.15862 34.1297 3.00284C34.5705 2.84375 35.0577 2.7642 35.5913 2.7642C35.9592 2.7642 36.3255 2.80729 36.6901 2.89347C37.0546 2.97964 37.3877 3.12216 37.6893 3.32102C37.991 3.51657 38.2329 3.78338 38.4152 4.12145C38.6008 4.45952 38.6936 4.8821 38.6936 5.3892V10.5H36.9635V9.45099H36.9038C36.7945 9.66312 36.6403 9.86198 36.4415 10.0476C36.2459 10.2299 35.999 10.3774 35.7007 10.4901C35.4057 10.5994 35.0594 10.6541 34.6616 10.6541ZM35.129 9.33168C35.4902 9.33168 35.8035 9.26042 36.0686 9.1179C36.3338 8.97206 36.5376 8.77983 36.6801 8.54119C36.8259 8.30256 36.8989 8.04238 36.8989 7.76065V6.8608C36.8425 6.9072 36.7464 6.95028 36.6105 6.99006C36.4779 7.02983 36.3288 7.06463 36.1631 7.09446C35.9973 7.12429 35.8333 7.1508 35.6709 7.17401C35.5085 7.19721 35.3676 7.21709 35.2483 7.23366C34.9798 7.27012 34.7395 7.32978 34.5274 7.41264C34.3153 7.4955 34.1479 7.61151 34.0253 7.76065C33.9026 7.90649 33.8413 8.09541 33.8413 8.32741C33.8413 8.65885 33.9623 8.90909 34.2043 9.07812C34.4462 9.24716 34.7544 9.33168 35.129 9.33168ZM43.5262 10.6491C42.7639 10.6491 42.1093 10.4818 41.5624 10.147C41.0189 9.81226 40.5996 9.34991 40.3046 8.75994C40.013 8.16667 39.8671 7.4839 39.8671 6.71165C39.8671 5.93608 40.0163 5.25166 40.3146 4.65838C40.6129 4.06179 41.0338 3.59777 41.5774 3.26633C42.1242 2.93158 42.7705 2.7642 43.5163 2.7642C44.1361 2.7642 44.6846 2.87855 45.1619 3.10724C45.6425 3.33262 46.0253 3.65246 46.3103 4.06676C46.5954 4.47775 46.7578 4.95833 46.7975 5.50852H45.0774C45.0078 5.14062 44.842 4.83404 44.5802 4.58878C44.3217 4.3402 43.9753 4.21591 43.5411 4.21591C43.1732 4.21591 42.8501 4.31534 42.5717 4.5142C42.2933 4.70975 42.0762 4.99148 41.9204 5.35938C41.7679 5.72727 41.6917 6.16809 41.6917 6.68182C41.6917 7.20218 41.7679 7.64962 41.9204 8.02415C42.0729 8.39536 42.2866 8.68205 42.5617 8.88423C42.8401 9.0831 43.1666 9.18253 43.5411 9.18253C43.8063 9.18253 44.0433 9.13281 44.2521 9.03338C44.4642 8.93063 44.6415 8.78314 44.784 8.59091C44.9266 8.39867 45.0243 8.16501 45.0774 7.88991H46.7975C46.7544 8.43016 46.5954 8.90909 46.3203 9.3267C46.0452 9.741 45.6706 10.0658 45.1967 10.3011C44.7227 10.5331 44.1659 10.6491 43.5262 10.6491ZM51.7806 2.86364V4.25568H47.3906V2.86364H51.7806ZM48.4744 1.03409H50.2742V8.20312C50.2742 8.44508 50.3106 8.63068 50.3835 8.75994C50.4598 8.88589 50.5592 8.97206 50.6818 9.01847C50.8045 9.06487 50.9404 9.08807 51.0895 9.08807C51.2022 9.08807 51.3049 9.07978 51.3977 9.06321C51.4939 9.04664 51.5668 9.03172 51.6165 9.01847L51.9198 10.4254C51.8236 10.4586 51.6861 10.495 51.5071 10.5348C51.3315 10.5746 51.116 10.5978 50.8608 10.6044C50.41 10.6177 50.004 10.5497 49.6428 10.4006C49.2815 10.2481 48.9948 10.0128 48.7827 9.6946C48.5739 9.37642 48.4711 8.97869 48.4744 8.50142V1.03409Z"
          />
        </svg>
      </Link>

      {isMobile && (
        <div
          onClick={handleOpen}
          className={`${s.burger} ${isOpen ? s.opened : ""}`}
          type="button"
        >
          <div
            style={{
              backgroundColor:
                location.pathname === "/portfolio" ||
                isScrolled ||
                location.pathname === "/policy-page" ||
                location.pathname.startsWith("/cases")
                  ? "black"
                  : "white",
            }}
            className={s.navBurgerLine}
          ></div>
          <div
            style={{
              backgroundColor:
                location.pathname === "/portfolio" ||
                isScrolled ||
                location.pathname === "/policy-page" ||
                location.pathname.startsWith("/cases")
                  ? "black"
                  : "white",
            }}
            className={s.navBurgerLine}
          ></div>
        </div>
      )}
    </nav>
  );
};
